name: CI

on:
  push:
  
jobs:

  build:
  
    runs-on: ubuntu-latest
  
    steps:
    
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '8'
          distribution: 'temurin'
          
      - name: Compilacion
        run: |
          mvn package
          
      #- name: Test Unitarios
        #run: |
          #mvn package test
          
      #- name: ejecuci√≥n de pruebas
        #run: |
          #mvn pdf:pdf
          
      - name: Unit Test 
        run: |
          mvn clean verify

      - name: Generate report jacoco
        run: mvn jacoco:report

      - name: JaCoCo Code Coverage Report
        id: jacoco_reporter
        uses: PavanMudigonda/jacoco-reporter@v5.0
        with:
          coverage_results_path: target/site/jacoco/jacoco.xml
          coverage_report_name: Coverage
          coverage_report_title: JaCoCo
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_check_run: false
          minimum_coverage: 70
          fail_below_threshold: true
          publish_only_summary: false
          
      - name: Upload JaCoCo Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco

      - name: Setup Java JDK for SonarCloud
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Analisis SonarCloud
        run: |
            mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:3.11.0.3922:sonar \
            -Dsonar.token=${{secrets.SONAR_TOKEN}} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.organization=arodriguez-cntv \
            -Dsonar.projectKey=arodriguez-cntv_microservicio-java
            
      - name: SonarQube Quality Gate Check
        env:
           SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        with:
          scanMetadataReportFile: target/sonar/report-task.txt

      - name: Docker Login
        uses: docker/login-action@v3.1.0
        with:
          username: arodriguezcntv
          password: ${{ secrets.DOCKER_PASS }}

      - name: Docker Build 
        run: |
          docker build -t arodriguezcntv/microservicio-java:latest .

      - name: Docker Push 
        run: |
          docker push arodriguezcntv/microservicio-java:latest
          
          
  deploy:
  
    needs: build
    
    runs-on: self-hosted
    
    steps:
    
      - name: Clonacion de repositorio para deploy
        uses: actions/checkout@v4
        
      - name: Despliegue local
        run: |
          kubectl apply -f deploy.yml


  testjmeter:
  
      needs: deploy
      
      runs-on: self-hosted
      
      steps:
        - name: Run JMeter Action on a test
          uses: rbhadti94/apache-jmeter-action@v0.5.0
          with:
            testFilePath: test_plan.jmx
            outputReportsFolder: reports/
            args: "--loglevel INFO"
            
        - name: Upload JMeter Report
          uses: actions/upload-artifact@v4
          with:
            name: jmeter-test-results
            path: reports/
